my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(name={ticker})
print(my_table)
}
my_fct(ticker="AALM11")
my_fct(ticker="AGRU12")
my_fct <- function(ticker='ticker'){
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(ativo=ticker)
print(my_table)
}
my_fct(ticker="AGRU12")
my_fct <- function(ticker){
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(ativo=ticker)
print(my_table)
}
my_fct(ticker="AGRU12")
my_fct(ticker="ALGA15")
my_fct <- function(ticker){
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4812L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(ativo=ticker)
my_table
}
my_fct(ticker="ALGA15")
my_fct <- function(ticker){
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4812L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(ativo=ticker)
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
my_table
}
my_fct(ticker="ALGA15")
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
my_fct <- function(ticker){
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4812L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(ativo=ticker)
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
my_table
}
my_fct(ticker="ALGA15")
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
##Scrapping da tabela --------------------
#Carregando o pacote
library(RSelenium)
library(rvest)
library(magrittr)
my_fct <- function(ticker){
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4812L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
my_table <- my_table[[1]]
my_table <- my_table %>%
dplyr::mutate(ativo=ticker)
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
my_table
}
my_fct(ticker="ALGA15")
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
library(RSelenium)
library(rvest)
library(magrittr)
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4812L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
ticker="ALGA15"
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
()
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Carregando o pacote
library(RSelenium)
library(rvest)
library(magrittr)
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Abre o servidor
remDr$open()
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
ticker="ALGA15"
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
remDr$navigate(url)
rD$navigate(url)
#Fecha o driver
remDr$close()
#Para o servidor
rD$server$stop()
rD <- rsDriver(port = 4812L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
#Web Scrapping no site da Ambima para buscar os proventos de açoes
# install.packages("rvest")
# install.packages("janitor")
# install.packages("glue")
install.packages("purrr")
install.packages("purrr")
##Scrapping da tabela --------------------
#Carregando o pacote
library(RSelenium)
library(rvest)
library(magrittr)
#Cria o servidor
rD <- rsDriver(port = 4834L,
##Define a versão do Chrome que o Webdriver deve utilizar
chromever = '97.0.4692.71',
##Remove as informações do console
verbose = F)
# Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port =4834L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
my_tickers <- read.csv("data2.csv")
my_list <- my_tickers$ï..Ativo
my_fct <- function(ticker){
# url
url1 <- glue::glue("https://data.anbima.com.br/debentures/{ticker}/agenda")
# rodar
remDr$navigate(url1)
Sys.sleep(4)
# tabela
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1) %>%
dplyr::mutate(ativo = ticker)
my_table
}
my_full_df <- purrr::map_dfr(my_list,my_fct)
my_full_df
# url
url1 <- 'https://data.anbima.com.br/debentures/SAIP11/agenda'
# rodar
remDr$navigate(url1)
Sys.sleep(4)
remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1) %>%
dplyr::mutate(ativo = ticker)
remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table()
remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1)
is.null(my_table)
# tabela
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1)
is.null(my_table)
# tabela
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1)
if (is.null(my_table)){
data.frame()
}else {
my_table <- my_table %>%
dplyr::mutate(ativo = ticker)
}
my_list
my_list[39:40]
my_full_df <- purrr::map_dfr(my_list[39:40],my_fct)
my_fct <- function(ticker){
# url
url1 <- 'https://data.anbima.com.br/debentures/SAIP11/agenda'
# rodar
remDr$navigate(url1)
Sys.sleep(4)
# tabela
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1)
if (is.null(my_table)){
data.frame()
}else {
my_table <- my_table %>%
dplyr::mutate(ativo = ticker)
}
my_table
}
my_full_df <- purrr::map_dfr(my_list[39:40],my_fct)
my_table
my_list[39:40]
my_full_df <- purrr::map_dfr(my_list[39:40],my_fct)
ticker
rm(ticker)
my_full_df <- purrr::map_dfr(my_list[40],my_fct)
my_table
# Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port =4834L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
my_tickers <- read.csv("data2.csv")
my_list <- my_tickers$ï..Ativo
my_fct <- function(ticker){
# url
url1 <- glue::glue('https://data.anbima.com.br/debentures/{ticker}/agenda')
# rodar
remDr$navigate(url1)
Sys.sleep(4)
# tabela
my_table <- remDr$getPageSource()[[1]] %>%
read_html() %>%
html_table() %>%
purrr::pluck(1)
if (is.null(my_table)){
data.frame()
}else {
my_table <- my_table %>%
dplyr::mutate(ativo = ticker)
}
my_table
}
my_full_df <- purrr::map_dfr(my_list[40],my_fct)
my_full_df
my_full_df <- purrr::map_dfr(my_list[39:40],my_fct)
my_full_df
my_full_df <- purrr::map_dfr(my_list,my_fct)
View(my_full_df)
#Web Scrapping no site da Ambima para buscar os proventos de açoes
# install.packages("rvest")
install.packages("janitor")
#Ajustando os nomes
janitor::clean_names(my_full_df)
View(my_full_df)
#Ajustando os nomes
my_full_df <- janitor::clean_names(my_full_df)
#Tratando as variaveis
str(my_full_df)
###################################
# Tratamento de dados do scrapping#
###################################
library(magrittr)
my_full_df
my_full_df <- my_full_df %>%
gsub('R$ ',"") %>%
gsub(",",".") #%>%
my_full_df <- my_full_df %>%
gsub('R$ ',"",valor_pago) %>%
gsub(",",".",valor_pago) #%>%
my_full_df <- my_full_df %>%
gsub('R$ ',"",valor_pago) %>%
gsub(",",".",valor_pago) #%>%
my_full_df <- my_full_df %>%
gsub('R$ ',"",valor_pago) #%>%
my_full_df <- gsub('R$ ',"",my_full_df$valor_pago) #%>%
my_full_df <- purrr::map_dfr(my_list,my_fct)
# Cria o driver para usar o R
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port =4834L,
browserName = "chrome"
)
#Abre o servidor
remDr$open()
my_full_df <- purrr::map_dfr(my_list,my_fct)
my_full_df <- purrr::map_dfr(my_list,my_fct)
#Ajustando os nomes
my_full_df <- janitor::clean_names(my_full_df)
#Tratando as variaveis
str(my_full_df)
my_full_df2 <- gsub('R$ ',"",valor_pago) #%>%
my_full_df2 <- my_full_df %>%
gsub('R$ ',"",valor_pago) #%>%
###################################
# Tratamento de dados do scrapping#
###################################
library(magrittr)
my_full_df2 <- my_full_df %>%
gsub('R$ ',"",valor_pago) #%>%
my_full_df2 <- my_full_df %>%
gsub('R$ ',"") #%>%
my_full_df2 <- my_full_df %>%
gsub('R$',"") #%>%
my_full_df2 <- my_full_df %>%
gsub(pattern = 'R$',replacement = "") #%>%
my_full_df2 <- my_full_df %>%
gsub(pattern = 'R$',replacement = "",valor_pago) #%>%
my_full_df2 <- gsub(pattern = 'R$',replacement = "",my_full_df$valor_pago) #%>%
my_full_df2 <- gsub(pattern = 'R$',replacement = " ",my_full_df$valor_pago) #%>%
my_full_df2 <- gsub(pattern = 'R$',replacement = "a",my_full_df$valor_pago) #%>%
my_full_df2 <- sub(pattern = 'R$',replacement = "a",my_full_df$valor_pago) #%>%
teste <- "wendel?"
gsub(pattern = "?", replacement = '',  x = teste)
gsub(pattern = "\\?", replacement = '',  x = teste)
my_full_df2 <- sub(pattern = '\\R$',replacement = "",my_full_df$valor_pago) #%>%
my_full_df2 <- sub(pattern = '\R$',replacement = "",my_full_df$valor_pago) #%>%
my_full_df2 <- sub(pattern = '\\R$',replacement = "",my_full_df$valor_pago) #%>%
my_full_df2
my_full_df
my_full_df$valor_pago
my_full_df2 <- gsub(pattern = '\\R$',replacement = "",my_full_df$valor_pago) #%>%
my_full_df2
my_full_df2 <- gsub(pattern = 'R$', replacement = "", x = my_full_df$valor_pago) #%>%
my_full_df2
gsub(pattern = 'R$', replacement = "", x = my_full_df$valor_pago)
gsub(pattern = 'R$', replacement = "", x = my_full_df$valor_pago)
gsub(pattern = 'R$', replacement = "", x = my_full_df$valor_pago)
gsub(pattern = 'R$ ', replacement = "", x = my_full_df$valor_pago)
gsub(pattern = 'R$ ', replacement = "", x = my_full_df$valor_pago)
gsub(pattern = 'R$ ', replacement = "", x = my_full_df$valor_pago)
my_full_df
#Ajustando os nomes
my_full_df <- janitor::clean_names(my_full_df) %>%
dplyr::mutate(valor_pago = stringr::str_squish(valor_pago))
my_full_df
janitor::clean_names(my_full_df)
gsub(pattern = 'R$', replacement = "", x = my_full_df$valor_pago)
stringi::stri_replace(str = my_full_df$valor_pago, replacement = "", regex = 'R$')
stringi::stri_replace(str = my_full_df$valor_pago, replacement = "", regex = 'R\\$')
stringr::str_squish(stringi::stri_replace(str = my_full_df$valor_pago, replacement = "", regex = 'R\\$')
stringr::str_squish(stringi::stri_replace(str = my_full_df$valor_pago, replacement = "", regex = 'R\\$'))
stringr::str_squish(stringi::stri_replace(str = my_full_df$valor_pago, replacement = "", regex = 'R\\$'))
arruma_coluna <- function(string){
gsub(",", ".", str_squish(gsub("R\\$", "", string)))
}
arruma_coluna(my_full_df$valor_pago)
arruma_coluna <- function(string){
gsub(",", ".", stringr::str_squish(gsub("R\\$", "", string)))
}
arruma_coluna(my_full_df$valor_pago)
arruma_coluna <- function(string){
as.numeric(gsub(",", ".", stringr::str_squish(gsub("R\\$", "", string))))
}
arruma_coluna(my_full_df$valor_pago)
my_full_df <- janitor::clean_names(my_full_df) %>%
dplyr::mutate(valor_pago = arruma_coluna(valor_pago))
my_full_df
View(my_full_df)
my_full_df2 <- janitor::clean_names(my_full_df) %>%
dplyr::mutate(valor_pago = arruma_coluna(valor_pago)) %>%
dplyr::filter(status=="liqudado")
View(my_full_df2)
my_full_df2 <- janitor::clean_names(my_full_df) %>%
dplyr::mutate(valor_pago = arruma_coluna(valor_pago)) %>%
dplyr::filter(status=="Liquidado")
View(my_full_df2)
write.csv(my_full_df2,"Proventos-Debentures-liquidados.csv")
my_full_df2 <- janitor::clean_names(my_full_df) %>%
dplyr::mutate(valor_pago = arruma_coluna(valor_pago)) %>%
dplyr::filter(status=="Liquidado") %>%
dplyr::select(ativo,data_do_evento,data_de_liquidacao,evento,percentual_taxa,valor_pago,status)
write.csv(my_full_df2,"Proventos-Debentures-liquidados.csv")
###################################
# Tratamento de dados do scrapping#
###################################
install.packages("writexl")
writexl::write.xlsx(my_full_df2,"Proventos-Debentures-liquidados.xlsx")
writexl::write_xlsx(my_full_df2,"Proventos-Debentures-liquidados.xlsx")
